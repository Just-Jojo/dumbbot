("Copyright (c) 2025 - Amy (jojo7791). Licensed under MIT", importer := __import__("importlib").import_module, config := importer("config"), types := importer("types"), asyncio := importer("asyncio"), discord := importer("discord"), commands := importer("discord.ext.commands"), coro := lambda f, name=None, type_hint=None: (y := types.coroutine(f), setattr(y, "__code__", (z := y.__code__).replace(co_flags=z.co_flags | 128)), name is not None and [setattr(y, x, str(name)) for x in ("__name__", "__qualname__")], type_hint is not None and setattr(y, "__annotations__", type_hint))[0], bot := commands.Bot(command_prefix="j%", intents=(i := discord.Intents.default(), setattr(i, "message_content", True))[0]), bot.command(name="ping")(coro(lambda ctx: (yield from ctx.send("Pong")), name="ping", type_hint={"ctx": commands.Context})), amogus := bot.group(name="amogus")(coro(lambda ctx: (ctx.invoked_subcommand is None and (yield from ctx.send("Run `j%amogus stinky <user>` to call a user stinky :3"))), name="amogus")), amogus.command(name="stinky")(coro(lambda ctx, user: (yield from ctx.send(f"{user.name} is stinky")), name="stinky", type_hint={"user": discord.User})), bot.run(config.token)) # noqa