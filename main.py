("Copyright (c) 2025 - Amy (jojo7791). Licensed under MIT", importer := __import__("importlib").import_module, config := importer("config"), types := importer("types"), asyncio := importer("asyncio"), discord := importer("discord"), commands := importer("discord.ext.commands"), coro := lambda f, name=None, type_hint=None: (y := types.coroutine(f), setattr(y, "__code__", (z := y.__code__).replace(co_flags=z.co_flags | 128)), name is not None and [setattr(y, x, str(name)) for x in ("__name__", "__qualname__")], "Have to set __qualname__ due to discord.py checking func.__qualname__ for determining classmethod, and lambda.__qualname__ is <lambda>", type_hint is not None and setattr(y, "__annotations__", type_hint))[0], bot := commands.Bot(command_prefix="j%", intents=(i := discord.Intents.default(), setattr(i, "message_content", True))[0]), bot.command(name="ping")(coro(lambda ctx: (yield from ctx.send("Pong")), name="ping", type_hint={"ctx": commands.Context})), amogus := bot.group(name="amogus")(coro(lambda ctx: (ctx.invoked_subcommand is None and (yield from ctx.send("Run `j%amogus stinky <user>` to call a user stinky :3"))), name="amogus")), amogus.command(name="stinky")(coro(lambda ctx, user: (yield from ctx.send(f"{user.name} is stinky")), name="stinky", type_hint={"user": discord.User})), amougs.command(name="dayo")(coro(lambda ctx, user: ((yield from ctx.send("You have to use this in a guild!")) if ctx.guild is None else ((yield from ctx.send(embed=discord.Embed(title=f"{user.name} is stinky, dayo", colour=0x00ffff, description=f"{user.mention} is the stinkiest, dayo").set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url))) if ctx.permissions.embed_links else (yield from ctx.send(f"{user.mention} is stinky dayo")))))), __name__ == "__main__" and bot.run(config.token)) # noqa